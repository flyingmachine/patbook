---
title: Ruby Under a Microscope - Pat Shaughnessy
---
#banner
  .content
    %a{:href => "/"}
      %span.author Pat Shaughnessy
      %span.about blogger, rubyist, aspiring author

.page
  #book-tweet
    %a{:href => "https://twitter.com/share", :class=> "twitter-share-button", "data-count" => "horizontal", "data-via" => "pat_shaughnessy", "data-text" => "Ruby Under a Microscope"}Tweet
  %script{:src => "//platform.twitter.com/widgets.js", :type => "text/javascript"}
    
  %h1 Ruby Under a Microscope

  #teaser
    %img{:src => "/images/whatvoodoo.jpg"}

  %h2 Have You Ever Wondered How Ruby Works Internally?
  
  %p Everyone knows that Ruby is a powerful language. Its dynamic nature allows you to concisely write the code you need to actually solve a problem instead of burying yourself under mountains of boilerplate. You don't have to fight it; you just get to enjoy the ride.

  %p But how is the magic created? And can you trust it? After all, MRI is written in C - a statically typed, compiled language which is pretty much the antithesis of Ruby. What <strong>dark voodoo</strong> is breathed into C to enable Ruby's features - closures, metaprogramming, and so much more?
  
  %h2 Find out with Science!

  %p Ruby Under a Microscope will guide you through the internals of some of Ruby's most-used facets. Using experimentation, theory, and two truckloads of diagrams, you'll <strong>clearly see how Ruby is implemented</strong>.

  .diagram
    %img{:src => "/images/tokenize.png"}
    .caption Here's just one of the diagrams out of the two truckloads. <br />Did you think that was a exaggeration? Well, it isn't!

  %p Here's a science fact for you: before they understood the nature of combustion, Enlightenment chemists believed fire resulted from the release of a negative-weight particle called "phlogiston". Then Antoine-Laurent Lavoisier knocked that theory on its derri&egrave;re by discovering oxygen and proving how combustion really works. 

  %p This book will offer you the same clarity. Instead of pointing at a Ruby block and yelling, "Phlogiston!", you'll be able to lucidly explain how Ruby copies variables from the stack to the heap in order to allow access to them even after a function has returned.

  %p Have no clue what that means? Well, that's exactly why you need to read this book.

  %p And good news: you don't need to know a lick of C! If you can't tell your pointers from your pointers to pointers, then have no fear. <strong>Ruby Under a Microscope is accessible to anyone</strong> with an interest in learning how Ruby works internally.

  %h2 People Already Love It

  %p Here's what people are already saying about <strong>Ruby Under a Microscope</strong>:

  %blockquote
    .pic
      %img{:src => "/images/avatars/peter.png"}
    .content
      Many people have dug into the Ruby source code but few make it back out
      and tell the tale as elegantly as Pat does in Ruby Under A Microscope! I
      particularly love the diagrams - and there are lots of them - as they
      make many opaque implementation topics a lot easier to understand,
      especially when coupled with Pat's gentle narrative. This book is a
      delight for language implementation geeks and Rubyists with a penchant
      for digging into the guts of their tools.
      %footer
        &ndash;
        %cite
          Peter Cooper (<a href="https://twitter.com/peterc">@peterc</a>) &mdash; Editor of Ruby Inside and Ruby Weekly

  %blockquote
    .pic
      %img{:src => "/images/avatars/xavier.jpg"}
    .content
      going to proofread a draft of @pat_shaughnessy's "Ruby Under a Microscope", man this book was missing in the Ruby landscape, awesome content
      %footer
        &ndash;
        %cite
          Xavier Noria (<a href="https://twitter.com/fxn">@fxn</a>) &mdash; Ruby Hero, Ruby on Rails Core Team Member
  
  %blockquote
    .pic
      %img{:src => "/images/avatars/santiago.jpg"}
    .content
      Pat Shaughnessy did a tremendous job writing THE book about Ruby
      internals. Definitely a must read, you won't find information like this
      anywhere else.
      %footer
        &ndash;
        %cite
          Santiago Pastorino (<a href="https://twitter.com/spastorino">@spastorino</a>) &mdash; WyeWorks Co-Founder, Ruby on Rails Core Team Member

  %h2 The Table of Contents
  %p Below is the Table of Contents. You'll probably learn a few things just by reading it. You'll learn even more by reading the book - go ahead and <a href="http://gum.co/UxhA">buy it</a>!

  %p Still not convinced? Pat has posted one section of each of these chapters for free on his blog already. The free sections are linked below:

  %table#toc
    %tr
      %td.main 1. Tokenization, Parsing and Compilation
      %td 10
    %tr
      %td Tokens: the words that make up the Ruby language
      %td 11
    %tr
      %td
        %a(href="http://patshaughnessy.net/2012/6/18/the-start-of-a-long-journey-how-ruby-parses-and-compiles-your-code")Parsing: how Ruby understands the code you write
      %td 19
    %tr
      %td Compilation: how Ruby translates your code into a new language
      %td 36
    %tr
      %td
        Tokenization, parsing and compilation in JRuby
      %td 55
    %tr
      %td
        Tokenization, parsing and compilation in Rubinius
      %td 59
    %tr
      %td.main 2. How Ruby Executes Your Code
      %td 65
    %tr
      %td
        YARV’s internal stack and your Ruby stack
      %td 66
    %tr
      %td
        Local and dynamic access of Ruby variables
      %td 78
    %tr
      %td
        %a(href="http://patshaughnessy.net/2012/6/29/how-ruby-executes-your-code") How YARV controls your program’s execution flow
      %td 90
    %tr
      %td
        How JRuby executes your code
      %td 100
    %tr
      %td
        How Rubinius executes your code
      %td 104
    %tr
      %td.main 3. Objects, Classes and Modules
      %td 109
    %tr
      %td
        %a(href="http://patshaughnessy.net/2012/7/26/objects-classes-and-modules") What’s inside a Ruby object?
      %td 110
    %tr
      %td
        Deducing what’s inside the RClass structure
      %td 119
    %tr
      %td
        How Ruby implements modules and method lookup
      %td 132
    %tr
      %td
        Objects, classes and modules in JRuby
      %td 144
    %tr
      %td
        Objects, classes and modules in Rubinius
      %td 148
    %tr
      %td.main
        %a(href="http://patshaughnessy.net/2012/5/9/one-chapter-from-my-upcoming-ebook-ruby-under-a-microscope")4. Hash Tables
      %td 152
    %tr
      %td Hash tables in Ruby
      %td 154
    %tr
      %td
        How hash tables expand to accommodate more values
      %td 161
    %tr
      %td
        How Ruby implements hash functions
      %td 169
    %tr
      %td
        Hash tables in JRuby
      %td 178
    %tr
      %td
        Hash tables in Rubinius
      %td 180
    %tr
      %td.main 5. How Ruby borrowed a decades old idea from Lisp
      %td 183
    %tr
      %td
        %a(href="http://patshaughnessy.net/2012/9/18/how-ruby-borrowed-a-decades-old-idea-from-lisp") Blocks: Closures in Ruby
      %td 184
    %tr
      %td
        Lambdas and Procs: treating functions as a first class citizen
      %td 195
    %tr
      %td
        Metaprogramming and closures: eval, instance_eval and binding
      %td 213
    %tr
      %td
        Closures in JRuby
      %td 226
    %tr
      %td
        Closures in Rubinius
      %td 229


  %h2 Buy Now for $20 and $2 Goes to Charity
  %p
    Are you ready to educate your brain with Ruby science? Then <a href =
    "http://gum.co/UxhA">Buy Ruby Under a Microscope now for only $20</a>.
  %p
    And guess what - with every purchase, Pat will donate $2 to charity!
    ($1 to <a href="http://giving.childrenshospital.org">Boston Children's
    Hospital</a> and another $1 to the <a href="http://saintrock.org">Saint
    Rock Haiti Foundation</a>)

  #buy-now
    <a href="http://gum.co/UxhA">Take Me to the Purchase Page Already!</a>

  %h2 About Pat

  #mugshot
    %img{:src => "/images/pat2.jpeg"}
    
  %p
    Pat Shaughnessy writes a blog about Ruby development here on this web site,
    <a href="http://patshaughnessy.net">patshaughnessy.net</a>. Pat's articles
    and presentations have been featured multiple times on the Ruby Weekly
    newsletter, the Ruby5 podcast and the Ruby Show. 

  %p
    When he's not at the keyboard, Pat enjoys spending time with his wife and
    two kids. Pat is also a fluent Spanish speaker and travels frequently to
    Spain to visit his wife's family.

  #book-comments
  #disqus_thread
    :javascript
      var disqus_identifier = 'http://patshaughnessy.net/ruby-under-a-microscope';
      var disqus_shortname = 'patshaughnessy';
    %script{:src => "http://disqus.com/forums/patshaughnessy/embed.js", :type => "text/javascript"}
    %noscript
      %a{:href => "http://patshaughnessy.disqus.com/?url=ref"} View the discussion thread.
    :javascript
      var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
      document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
    :javascript
      try {
      var pageTracker = _gat._getTracker("UA-5273122-4");
      pageTracker._trackPageview();
      } catch(err) {}
      


#credits
  This landing page was designed by <a href="http://www.flyingmachinestudios.com">Daniel Higginbotham</a>. You might like his Mac app, <a href="http://flyingmachinestudios.com/foreman">Foreman</a>
